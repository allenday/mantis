syntax = "proto3";

package mantis.prompts;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "mantis/v1/mantis_persona.proto";
import "mantis/v1/mantis_core.proto";

option csharp_namespace = "Mantis.Prompts.V1";
option go_package = "google.golang.org/mantis/prompts/v1";
option java_multiple_files = true;
option java_outer_classname = "MantisPromptsProto";
option java_package = "com.mantis.prompts.v1";

// DEPRECATED: Complex prompt composition replaced with simple ContextualPrompt assembly
// This service is maintained for backward compatibility only
service PromptCompositionService {
  option deprecated = true;
  
  // DEPRECATED: Use ContextualPrompt for simple template assembly instead
  rpc ComposePrompt(PromptCompositionRequest) returns (PromptCompositionResponse) {
    option deprecated = true;
  }
  
  // DEPRECATED: Simple template assembly no longer requires complex capabilities
  rpc GetCapabilities(PromptCapabilitiesRequest) returns (PromptCapabilitiesResponse) {
    option deprecated = true;
  }
}


// DEPRECATED: Request for prompt composition - use ContextualPrompt instead
message PromptCompositionRequest {
  option deprecated = true;
  
  // DEPRECATED: The agent card with persona and competency data
  mantis.persona.v1.MantisAgentCard agent_card = 1;
  
  // DEPRECATED: User request with query and context
  mantis.core.UserRequest user_request = 2;
  
  // DEPRECATED: Agent specification with role preferences
  mantis.core.AgentSpec agent_spec = 3;
  
  // DEPRECATED: Execution context for role assignment and recursion
  mantis.core.ContextualExecution execution_context = 4;
  
  // DEPRECATED: Composition strategy to use
  PromptCompositionStrategy strategy = 5;
}

// DEPRECATED: Response with composed prompt - use ContextualPrompt.message_template instead
message PromptCompositionResponse {
  option deprecated = true;
  
  // DEPRECATED: The final composed prompt text  
  string composed_prompt = 1;
  
  // DEPRECATED: Modules that were used in composition
  repeated string modules_used = 2;
  
  // DEPRECATED: Variables that were resolved during composition
  map<string, string> variables_resolved = 3;
  
  // DEPRECATED: Composition strategy that was applied
  PromptCompositionStrategy strategy = 4;
  
  // DEPRECATED: Composition metadata
  PromptCompositionMetadata metadata = 5;
}


// DEPRECATED: Composition strategy enumeration - replaced with simple template assembly
enum PromptCompositionStrategy {
  option deprecated = true;
  
  PROMPT_COMPOSITION_STRATEGY_UNSPECIFIED = 0;
  PROMPT_COMPOSITION_STRATEGY_LAYERED = 1;    // DEPRECATED: Layer modules by priority
  PROMPT_COMPOSITION_STRATEGY_BLENDED = 2;    // DEPRECATED: Blend modules together
  PROMPT_COMPOSITION_STRATEGY_CONDITIONAL = 3; // DEPRECATED: Apply modules based on conditions
}

// DEPRECATED: Metadata about the composition process - no longer needed with simple assembly
message PromptCompositionMetadata {
  option deprecated = true;
  
  // DEPRECATED: Total variables available for substitution
  int32 total_variables = 1;
  
  // DEPRECATED: Variables that were actually used
  int32 variables_used = 2;
  
  // DEPRECATED: Modules that were available
  repeated string available_modules = 3;
  
  // DEPRECATED: Modules that were applicable
  repeated string applicable_modules = 4;
  
  // DEPRECATED: Composition time in milliseconds
  int64 composition_time_ms = 5;
}

// DEPRECATED: Request for service capabilities - no longer needed with simple assembly
message PromptCapabilitiesRequest {
  option deprecated = true;
  // No parameters needed
}

// DEPRECATED: Response with service capabilities - no longer needed with simple assembly
message PromptCapabilitiesResponse {
  option deprecated = true;
  
  // DEPRECATED: Available composition strategies
  repeated PromptCompositionStrategy strategies = 1;
  
  // DEPRECATED: Available prompt modules
  repeated PromptModuleInfo modules = 2;
  
  // DEPRECATED: Service version
  string version = 3;
}

// DEPRECATED: Information about a prompt module - no longer needed with simple assembly
message PromptModuleInfo {
  option deprecated = true;
  
  // DEPRECATED: Module name
  string name = 1;
  
  // DEPRECATED: Module description
  string description = 2;
  
  // DEPRECATED: Module priority
  int32 priority = 3;
  
  // DEPRECATED: Whether module is always applicable
  bool always_applicable = 4;
  
  // DEPRECATED: Variables this module uses
  repeated string required_variables = 5;
}